{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      uaername: '',\n      password: '',\n      errors: []\n    };\n  },\n  methods: {\n    submitForm(e) {\n      axios.defaults.headers.common[\"Authorization\"] = \"\";\n      localStorage.removeItem(\"token\");\n      const formData = {\n        username: this.username,\n        password: this.password\n      };\n      axios.post('/api/v1/token/login/', formData).then(response => {\n        const token = response.data.auth_token;\n        this.$store.commit('setToken', token);\n        axios.defaults.headers.common[\"Authorization\"] = \"Token \" + token;\n        localStorage.setItem(\"token\", token);\n        this.$router.push('/dashboard');\n      }).catch(error => {\n        if (error.response) {\n          for (const property in error.response.data) {\n            this.errors.push(`${porperty}: ${error.response.data[property]}`);\n          }\n          console.log(JSON.stringify(error.response.data));\n        } else if (error.message) {\n          console.log(JSON.stringify(error.message));\n        } else {\n          console.log(JSON.stringify(error));\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","uaername","password","errors","methods","submitForm","e","defaults","headers","common","localStorage","removeItem","formData","username","post","then","response","token","auth_token","$store","commit","setItem","$router","push","catch","error","property","porperty","console","log","JSON","stringify","message"],"sources":["/home/abhishek/Code/python_practice/djvue/djvue-vue/src/views/Login.vue"],"sourcesContent":["<template>\n    <div class=\"page-login\">\n        <div class=\"columns\">\n            <div class=\"column is-4 is-offset-4\">\n                <h1 class=\"title\">\n                    Log in\n                </h1>\n                <form @submit.prevent=\"submitForm\">\n                    <div class=\"field\">\n                        <label>Username</label>\n                        <div class=\"control\">\n                            <input type=\"email\" name=\"username\" class=\"input\" v-model=\"username\">\n                        </div>\n                    </div>\n                    \n                    <div class=\"field\">\n                        <label>Password</label>\n                        <div class=\"control\">\n                            <input type=\"password\" name=\"password\" class=\"input\" v-model=\"password\">\n                        </div>\n                    </div>\n\n                    <div class=\"notification is-danger\" v-if=\"errors.length\">\n                        <p v-for=\"error in errors\" v-bind:key=\"error\">{{error}}</p>\n                    </div>\n\n                    <div class=\"field\">\n                        <div class=\"control\">\n                            <button class=\"button is-success\">Log in</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nexport default {\n    name: 'Login',\n    data() {\n        return{\n            uaername: '',\n            password: '',\n            errors: []\n        }\n    },\n    methods: {\n        submitForm(e){\n            axios.defaults.headers.common[\"Authorization\"] = \"\"\n\n            localStorage.removeItem(\"token\")\n\n            const formData = {\n                username: this.username,\n                password: this.password\n            }\n\n            axios\n                .post('/api/v1/token/login/', formData)\n                .then(response => {\n                    const token = response.data.auth_token\n\n                    this.$store.commit('setToken', token)\n\n                    axios.defaults.headers.common[\"Authorization\"] = \"Token \" + token\n\n                    localStorage.setItem(\"token\", token)\n\n                    this.$router.push('/dashboard')\n                })\n                .catch(error => {\n                    if (error.response) {\n                        for (const property in error.response.data) {\n                            this.errors.push(`${porperty}: ${error.response.data[property]}`)\n                        }\n\n                        console.log(JSON.stringify(error.response.data))\n                    } else if (error.message) {\n                        console.log(JSON.stringify(error.message))\n                    } else {\n                        console.log(JSON.stringify(error))\n                    }\n                })\n        }\n    }\n}\n</script>"],"mappings":";AAsCA,OAAOA,KAAI,MAAO,OAAM;AACxB,eAAe;EACXC,IAAI,EAAE,OAAO;EACbC,IAAIA,CAAA,EAAG;IACH,OAAM;MACFC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE;IACZ;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,UAAUA,CAACC,CAAC,EAAC;MACTR,KAAK,CAACS,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,IAAI,EAAC;MAElDC,YAAY,CAACC,UAAU,CAAC,OAAO;MAE/B,MAAMC,QAAO,GAAI;QACbC,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBX,QAAQ,EAAE,IAAI,CAACA;MACnB;MAEAJ,KAAI,CACCgB,IAAI,CAAC,sBAAsB,EAAEF,QAAQ,EACrCG,IAAI,CAACC,QAAO,IAAK;QACd,MAAMC,KAAI,GAAID,QAAQ,CAAChB,IAAI,CAACkB,UAAS;QAErC,IAAI,CAACC,MAAM,CAACC,MAAM,CAAC,UAAU,EAAEH,KAAK;QAEpCnB,KAAK,CAACS,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,IAAI,QAAO,GAAIQ,KAAI;QAEhEP,YAAY,CAACW,OAAO,CAAC,OAAO,EAAEJ,KAAK;QAEnC,IAAI,CAACK,OAAO,CAACC,IAAI,CAAC,YAAY;MAClC,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACZ,IAAIA,KAAK,CAACT,QAAQ,EAAE;UAChB,KAAK,MAAMU,QAAO,IAAKD,KAAK,CAACT,QAAQ,CAAChB,IAAI,EAAE;YACxC,IAAI,CAACG,MAAM,CAACoB,IAAI,CAAC,GAAGI,QAAQ,KAAKF,KAAK,CAACT,QAAQ,CAAChB,IAAI,CAAC0B,QAAQ,CAAC,EAAE;UACpE;UAEAE,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACN,KAAK,CAACT,QAAQ,CAAChB,IAAI,CAAC;QACnD,OAAO,IAAIyB,KAAK,CAACO,OAAO,EAAE;UACtBJ,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACN,KAAK,CAACO,OAAO,CAAC;QAC7C,OAAO;UACHJ,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACN,KAAK,CAAC;QACrC;MACJ,CAAC;IACT;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}